https://www.youtube.com/watch?v=TmtN3Rmx9Rk
https://github.com/PhysicsX/QTonRaspberryPi/tree/main/QtRaspberryPi5.14.2

1- make raspberry pi ready for compilation
install "Raspian buster with desktop", use Win32 Disk Imager to write to sd card, insert sd card and boot raspberry pi

sudo vi /etc/apt/sources.list    remove uncomment deb-src..   wq!
sudo apt update
sudo apt full-upgrade
sudo reboot
sudo rpi-update
sudo reboot
/** yeni bir sürüöö olursa otomatik güncellesin diye
cat /boot/.firmware_revision
f524729d84d527efd3751679c8c68445bb171b20
sudo rpi-update f524729d84d527efd3751679c8c68445bb171b20
ls /opt/vc/lib/
*/
sudo apt-get build-dep qt5-qmake
sudo apt-get build-dep libqt5webengine-data

sudo apt-get install libboost1.58-all-dev libudev-dev libinput-dev libts-dev libmtdev-dev libjpeg-dev libfontconfig1-dev 
sudo apt-get install libssl-dev libdbus-1-dev libglib2.0-dev libxkbcommon-dev libegl1-mesa-dev libgbm-dev libgles2-mesa-dev mesa-common-dev
sudo apt-get install libasound2-dev libpulse-dev gstreamer1.0-omx libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev  gstreamer1.0-alsa
sudo apt-get install libvpx-dev libsrtp0-dev libsnappy-dev libnss3-dev
sudo apt-get install "^libxcb.*"
sudo apt-get install flex bison libxslt-dev ruby gperf libbz2-dev libcups2-dev libatkmm-1.6-dev libxi6 libxcomposite1
sudo apt-get install libfreetype6-dev libicu-dev libsqlite3-dev libxslt1-dev libavcodec-dev libavformat-dev libswscale-dev 
sudo apt-get install libgstreamer0.10-dev gstreamer-tools libraspberrypi-dev libx11-dev libglib2.0-dev 
sudo apt-get install freetds-dev libsqlite0-dev libpq-dev libiodbc2-dev firebird-dev libjpeg9-dev libgst-dev libxext-dev libxcb1 libxcb1-dev libx11-xcb1 
sudo apt-get install libx11-xcb-dev libxcb-keysyms1 libxcb-keysyms1-dev libxcb-image0 libxcb-image0-dev libxcb-shm0 libxcb-shm0-dev libxcb-icccm4 libxcb-icccm4-dev 
sudo apt-get install libxcb-sync1 libxcb-sync-dev libxcb-render-util0 libxcb-render-util0-dev libxcb-xfixes0-dev libxrender-dev libxcb-shape0-dev libxcb-randr0-dev 
sudo apt-get install libxcb-glx0-dev libxi-dev libdrm-dev libssl-dev libxcb-xinerama0 libxcb-xinerama0-dev
sudo apt-get install libatspi-dev libssl-dev libxcursor-dev libxcomposite-dev libxdamage-dev libfontconfig1-dev 
sudo apt-get install libxss-dev libxtst-dev libpci-dev libcap-dev libsrtp0-dev libxrandr-dev libnss3-dev libdirectfb-dev libaudio-dev


sudo mkdir /usr/local/qt5pi
sudo chown evrypi:evrypi /usr/local/qt5pi
ls -l /usr/local/qt5pi/
ls -l /usr/local/

2- ubuntu VM - Qt Compilation
8gb ram, 100gb disk, 80mb video, 4cpu

sudo apt-get update
sudo apt-get upgrade
ping 192.168.1.61
sudo bash
apt-get install gcc git bison python gperf pkg-config
apt install make
apt install libclang-dev
apt install build-essential
mkdir /opt/qt5pi
chown evrypi:evrypi /opt/qt5pi
cd /opt/qt5pi/

wget https://releases.linaro.org/components/toolchain/binaries/latest-7/arm-linux-gnueabihf/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz
tar xf gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf.tar.xz 
export PATH=$PATH:/opt/qt5pi/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf/bin
nano ~/.bashrc

wget https://download.qt.io/official_releases/qt/5.15/5.15.2/single/qt-everywhere-src-5.15.2.tar.xz
tar xf qt-everywhere-src-5.15.2.tar.xz 
ls
cat qt-everywhere-src-5.15.2
car qt-everywhere-src-5.15.2/qtbase/mkspecs/devices/linux-
car qt-everywhere-src-5.15.2/qtbase/mkspecs/devices/linux-rasp-pi4-v3d-g++/gmake.conf
cat qt-everywhere-src-5.15.2/qtbase/mkspecs/linux-arm-gnueabi-g++/qmake.conf
  
ping 192.168.1.61
mkdir sysroot sysroot/usr sysroot/opt" before rsync

rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/lib/ sysroot/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/usr/include/ sysroot/usr/include
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/lib/ sysroot/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/usr/lib/ sysroot/usr/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/opt/vc/ sysroot/opt/vc


ls sysroot/usr/lib/arm-linux-gnueabihf/libEGL.so.1.1.0
mv sysroot/usr/lib/arm-linux-gnueabihf/libEGL.so.1.1.0 sysroot/usr/lib/arm-linux-gnueabihf/libEGL.so.1.1.0_backup
ln -s sysroot/opt/vc/lib/libEGL.so sysroot/usr/lib/arm-linux-gnueabihf/libEGL.so.1.1.0
mv sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0 sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0_backup
ln -s sysroot/opt/vc/lib/libGLESv2.so sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0
mv sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0 sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0_backup
ls sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0
ln -s sysroot/opt/vc/lib/libGLESv2.so sysroot/usr/lib/arm-linux-gnueabihf/libGLESv2.so.2.1.0
ln -s sysroot/opt/vc/lib/libEGL.so sysroot/opt/vc/lib/libEGL.so.1
ln -s sysroot/opt/vc/lib/libGLESv2.so sysroot/opt/vc/lib/libGLESv2.so.2

wget https://raw.githubusercontent.com/riscv/riscv-poky/master/scripts/sysroot-relativelinks.py
chmod +x sysroot-relativelinks.py 
./sysroot-relativelinks.py sysroot

rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/lib/ sysroot/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/usr/include/ sysroot/usr/include
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/lib/ sysroot/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/usr/lib/ sysroot/usr/lib
rsync -avz --rsync-path="sudo rsync" pi@192.168.1.61:/opt/vc/ sysroot/opt/vc

./sysroot-relativelinks.py sysroot
mkdir qt5build
cd qt5build/
../qt-everywhere-src-5.15.2/configure -opengl es2 -device linux-rasp-pi4-v3d-g++ -device-option CROSS_COMPILE=/opt/qt5pi/gcc-linaro-7.5.0-2019.12-x86_64_arm-linux-gnueabihf/bin/arm-linux-gnueabihf- -sysroot /opt/qt5pi/sysroot -prefix /usr/local/qt5pi -opensource -confirm-license -skip qtscript -skip qtwayland -skip qtdatavis3d -nomake examples -make libs -pkg-config -no-use-gold-linker -v
make -j8
make install
ls /opt/qt5pi/sysroot/usr/local/qt5pi/bin/qmake
cd /opt/qt5pi/
rsync -avz --rsync-path="sudo rsync" sysroot/usr/local/qt5pi pi@192.168.1.61:/usr/local

   pi@192.168.1.61
  
  
3- QtCreator Installation Run & Deply Compiled Example

sudo apt install qtcreator
sudo qtcreator
/**
qt creator içinde
tools->kits->add->RaspiQt, Generic Linux Device, Qt version Qt15.5.2(qt5pi)
tools->kits->RaspiQt ..Qtversions->(manual)add-> /opt/qt5pi/sysroot/usr/local/qt5pi/bin/qmake
tools->kits->compilers->add->gcc->c->name(gcc_raspi), browse-> /opt/qt5pi/gcc_linaro7.5.0-..m-linuux-gnueabihf/bin/arm-linugnueabihf-gcc(arm-linugnueabihf-7.5.0 ın üstünde), ABI<custom>
tools->kits->compilers->add->gcc->c++->name(g++_raspi), browse-> /opt/qt5pi/gcc_linaro7.5.0-..m-linuux-gnueabihf/bin/arm-linugnueabihf-g++(arm-linugnueabihf-7.5.0 ın üstünde), ABI <custom>
tools->kits-> raspiQt ..compiler C gcc_raspi, C++ g++_raspi

tools->devices-> add generic linux device -> -----------
Raspberry
192.168.1.61
pi
next, next, finish...device test failed
authentication type default .. test.. enter ip address of pi .. success.. 
apply and ok
-------------
create a project..... project name you will use
project location is home/evrypi/Desktop .. next .. next.. next.. next ..next .. RaspiQt select and next.. finish
project->Build->build directory change to release (debug computer --- release select) and copy here
build -> run qmake.. compile output..

open the terminal in linux-> 
cd /home/evrypi/Desktop/paste here copy of release, press enter
ls
file EvryDashboard(project name)
scp EvryDashboard pi@192.168.1.61:/home/pi .. press enter .. yes .. password

open terminal on raspberry->
ls
./EvryDashboard(project name)

gui is running on Raspberry pi

projeyi çalıştırmıyacak
bunları raspberry pi terminal ekranına gir

export QT_QPA_PLATFOMRTHEME=qt5ct
export DISPLAY=:0.0
export XAUTHORITY=/home/pi/.Xauthrity
export XDG_SESSION_TYPE=x11

png ler ile ilgili lib hatası verirse convert
ubuntu terminak ekranına->
sudo apt-get install imagemagick
convert -version
cd fotoğrafların içine gir
convert tacho.png tacho.png
*/
